" https://github.com/JetBrains/ideavim/discussions/703
function! GetFilePath() abort
  let l:orig = @+
  execute 'action CopyPaths'
  let l:fpath = @+
  let @+ = orig
  return l:fpath
endfunction

function! PushLine() abort
  if !exists('g:lines')
    let g:lines = []
  endif

  let cur = { 'path': GetFilePath(), 'line': line('.') }

  let g:lines = g:lines + [cur]

  " echo "Pushed " . cur['path'] . ":" . cur['line']
  " echo g:lines
endfunction

function! PopLine() abort
  if !exists('g:lines') || empty(g:lines)
    return
  endif

  let len_lines = len(g:lines)

  let l = g:lines[len_lines - 1]

  if len_lines == 1
    let g:lines = []
  elseif len_lines == 2
    let g:lines = [g:lines[0]]
  else
    let g:lines = g:lines[0 : len_lines - 2]
  endif

  execute "edit " . l["path"]
  execute ":" . l["line"]
endfunction
"####表示設定####
set laststatus=2
set noshowmode
set title
set showmatch
set showmode
set matchtime=1
" set tabstop=2
" set shiftwidth=2
set scrolloff=5
set clipboard+=unnamed " share clipboard

"####検索設定####
set ignorecase
set smartcase
set noincsearch
set hlsearch

set iminsert=2

"####キーマッピング設定####
"dall で全削除
nnoremap == :action ReformatCode<CR>
nnoremap ZZ <Nop>
nnoremap ZQ <Nop>
nnoremap dall ggVG"0d
nnoremap <SPACE>p "0p
nnoremap <SPACE>P "0P
nnoremap <silent> <ESC><ESC> :noh<CR>
nnoremap q: <Nop>
nnoremap + <C-a>
nnoremap - <C-x>
nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k
nnoremap gb gT
" wをuppercamelとかにも対応させる
nnoremap w [w
nnoremap b [b
nnoremap [w w
nnoremap [b b
nnoremap <Space>n :set relativenumber!<CR>
nnoremap <SPACE><SPACE> :action CommentByLineComment<CR>
nnoremap <SPACE>* :call PushLine()<CR>:action GotoDeclaration<CR>
nnoremap <SPACE>; :call PushLine()<CR>:action GotoDeclaration<CR>
nnoremap 'M :call PopLine()<CR>
nnoremap <SPACE>r :action RenameElement<CR>
nnoremap \t :action ActivateTerminalToolWindow<CR>
nnoremap \r :action Run<CR>
nnoremap \d :action Debug<CR>
if &ide =~? 'rustrover'
    nnoremap \b :action Rust.Build<CR>
else
    nnoremap \b :action Build<CR>
endif
nnoremap \B :action BuildSolutionAction<CR>
nnoremap \c :action Coverage<CR>
nnoremap \sr :action ChooseRunConfiguration<CR>
nnoremap \sd :action ChooseDebugConfiguration<CR>
nnoremap \sb :action ChooseActiveBuildConfiguration<CR>
nnoremap \ga :action Git.Add<CR>
nnoremap \gc :action Git.Commit<CR>
nnoremap \gf :action Git.Fetch<CR>
nnoremap \gp :action Git.Pull<CR>
nnoremap \p :action ActivateProjectToolWindow<CR>
nnoremap \a :action GotoAction<CR>
nnoremap <F2> :action GotoRelated<CR>

nnoremap sl <C-w>l
nnoremap ss <C-w>w
nnoremap sw <C-w>w
nnoremap <S-Right> $
nnoremap <S-Left> ^
nnoremap <S-Up> gg
nnoremap <S-Down> G
"挿入モード中の矢印は末端まで移動にする
imap <S-Right> <ESC>$i<RIGHT>
imap <S-Left> <ESC>^i<LEFT>
imap <S-Up> <ESC>ggi
imap <S-Down> <ESC>Gi
imap <C-b> <ESC>:Puw<CR>i
vnoremap <SPACE><SPACE> <C-/>

" プラグイン
" easymotionは別途IdeaVim-EasyMotionプラグインを入れなくてはならない
set easymotion
map \\ <Plug>(easymotion-prefix)
set surround " vim-surround
set ideajoin

" 保存されているマクロを削除する(誤爆防止)
let @0=""
let @1=""
let @2=""
let @3=""
let @4=""
let @5=""
let @6=""
let @7=""
let @8=""
let @9=""
let @a=""
let @b=""
let @c=""
let @d=""
let @e=""
let @f=""
let @g=""
let @h=""
let @i=""
let @j=""
let @k=""
let @l=""
let @m=""
let @n=""
let @o=""
let @p=""
let @q=""
let @r=""
let @s=""
let @t=""
let @u=""
let @v=""
let @w=""
let @x=""
let @y=""
let @z=""

