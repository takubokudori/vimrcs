" バッファ全体置換は:1,$s/正規表現/置換後文字列/gです。
" :1,$が範囲指定。なお、%がバッファ全体の意味を持つからこれでもよかったり。
" s/../../が文字列置換。最後のgは、その行すべての正規表現を変えるの意味。これ
" ないと行の中で最初にかかったものしか置換してくれない
" Note: Skip
" initialization for vim-tiny or vim-small.
"


" Required:
set runtimepath^=C:\~/.vim/bundle/neobundle.vim/
set runtimepath^=C:\~/.vim/bundle/taglist_46/plugin
runtime somescript/commentout.vim

" Required:
call neobundle#begin(expand('C:\~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'
"NeoBundleFetch 'plugin/neobundle.vim'

" My Bundles here:
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/vinarise'
NeoBundle 'Shougo/unite-outline'
NeoBundle 'Shougo/neocomplete.vim'
NeoBundle 'Shougo/neosnippet.vim'
NeoBundle 'Shougo/neosnippet-snippets'
NeoBundle 'Shougo/vimfiler'
NeoBundle 'Konfekt/FastFold'
NeoBundle 'nathanaelkane/vim-indent-guides'
NeoBundle 'tyru/open-browser.vim'
" NeoBundle 'violetyk/neocomplete-php.vim'
NeoBundle 'Shougo/neomru.vim'
NeoBundle 't9md/vim-quickhl'
NeoBundle 'Shougo/vimproc', {  
			\ 'build' : {
			\ 'windows' : 'make -f make_mingw64.mak',
			\ 'cygwin' : 'make -f make_cygwin.mak',
			\ 'mac' : 'make -f make_mac.mak',
			\ 'unix' : 'make -f make_unix.mak',
			\ },
			\ }

NeoBundle 'mattn/webapi-vim'
NeoBundle 'itchyny/lightline.vim'
NeoBundle 'thinca/vim-quickrun'
NeoBundle 'thinca/vim-ref'
NeoBundle 'tomtom/tcomment_vim'
NeoBundle "osyo-manga/vim-watchdogs"
NeoBundle "osyo-manga/shabadou.vim"
" NeoBundle "Rip-Rip/clang_complete"
NeoBundle "justmao945/vim-clang"
NeoBundle "kana/vim-altr"
NeoBundle "mattn/emmet-vim"
NeoBundle 'tpope/vim-surround'
NeoBundle 'cohama/lexima.vim'
NeoBundle 'scrooloose/nerdtree'

"NeoBundle schemes
NeoBundle 'jpo/vim-railscasts-theme'
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'cocopon/iceberg.vim'
" NeoBundle 'tomasr/molokai'

"NeoBundle Syntaxes
"STLの型やメンバ関数に色を付ける
NeoBundle 'hail2u/vim-css3-syntax'
NeoBundle "Mizuchi/STL-Syntax"
NeoBundle "jelera/vim-javascript-syntax"
NeoBundle "PProvost/vim-ps1"
NeoBundle 'othree/html5.vim'
" NeoBundle 'taichouchou2/vim-javascript'
NeoBundle 'gorodinskiy/vim-coloresque'
let g:quickrun_config = {
			\   "_" : {
			\       "outputter" : "error",
			\       "outputter/error/success" : "buffer",
			\       "outputter/error/error"   : "quickfix",
			\       "outputter/quickfix/open_cmd" : "copen",
			\		"hook/time/enable" : 1,
			\		"runner" : "vimproc",
			\		"runner/vimproc/updatetime" : 60,
			\   },
			\   "cpp" : {
			\       "type" : "g++",
			\       "cmdopt" : "",
			\   },
			\
			\   "cpp/watchdogs_checker" : {
			\       "type" : "watchdogs_checker/g++",
			\   },
			\
			\   "watchdogs_checker/g++" : {
			\       "cmdopt" : "-Wall",
			\   },
			\
			\   "watchdogs_checker/clang++" : {
			\       "cmdopt" : "-Wall",
			\   },
			\}
if !exists('g:neocomplete#force_omni_input_patterns')
        let g:neocomplete#force_omni_input_patterns = {}
endif
let g:neocomplete#force_overwrite_completefunc = 1
let g:neocomplete#force_omni_input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)'
let g:neocomplete#force_omni_input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\|\h\w*::'
let g:neocomplete#sources#dictionary#dictionaries = {
			\ 'php': 'C:\~\.vim\myvim\php.dict',
			\ 'c': 'C:\~\.vim\myvim\C.dict',
			\ 'cpp': 'C:\~\.vim\myvim\CPP.dict,C:\~\.vim\myvim\C.dict',
			\ }
" :WatchdogsRunで、構文チェックを実行できる
"let g:watchdogs_check_BufWritePost_enable = 1
let g:neocomplete#enable_at_startup=1
let g:neosnippet#snippets_directory='C:\~\.vim\bundle\neosnippet-snippets\neosnippets'
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" Refer to |:NeoBundle-examples|.
" Note: You don't set neobundle setting in .gvimrc!

let NERDTreeIgnore=['.[oa]$','.(exe|obj)','.(so)$','.(tgz|gz|zip)$']

" let g:clang_complete_auto=1
" let g:clang_use_library=0
" let g:clang_exec='C:/clang/clang.exe'
" let g:clang_user_options='-I D:/boost_1_45_0 -fms-extensions -fmsc-version=1300 -fgnu-runtime -D__MSVCRT_VERSION__=0x700 -D_WIN32_WINNT=0x0500 2> NUL || exit 0"'
" clang_completeの設定
let g:clang_complete_auto=1
let g:clang_complete_copen=1
let g:clang_use_library=1
let g:clang_exec='"C:\LLVM\bin'
let g:clang_library_path='C:\LLVM\bin'
let g:clang_user_options = '2> NUL || exit 0"'
" 終わり
" vim-clangの設定
let g:clang_auto=1
let g:clang_c_completeopt='menuone'
let g:clang_cpp_completeopt='menuone'
let g:clang_exec='C:\LLVM\bin'
let g:clang_cpp_options='-std=c++11 -stdlib=libc++'

let g:user_emmet_leader_key='<c-t>'
let g:tcommentMapLeader1='<C-_>'
" let g:neocomplete_php_locale='ja'
let g:ref_phpmanual_path='C:\~\.vim\myvim\php-chunked-xhtml'
call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck
